extends layout-nosidebar

block append trailers
	script(src='/js/bundle.js')
	script(src='/js/rivets.min.js')
	- var json = JSON.stringify(post)
	script(src='/js/app.js')
	script.
		var postjson = !{json};
		var 
			app = require('./build/js/app.js')
			Backbone = require('backbone'),
			marked = require('supermarked')
			;

		Backbone.$ = window.$;
		$(function()
		{
			var post = new app.PostModel();
			post.set(postjson);

			var controller = new app.Postmonger();
			Backbone.history.start({pushState: true});

			rivets.adapters[':'] =
			{
				subscribe: function(obj, keypath, callback) { obj.on('change:' + keypath, callback); },
				unsubscribe: function(obj, keypath, callback) { obj.off('change:' + keypath, callback); },
				read: function(obj, keypath) { return obj.get(keypath); },
				publish: function(obj, keypath, value) { obj.set(keypath, value); }
			}

			rivets.formatters.render = function(text)
			{
				return marked(text);
			}

			rivets.bind($('#preview'), { post: post });
			rivets.bind($('#postForm'), { post: post });
		});

block content
	.container
		h2 New post
		.row
			.col-md-7
				form#postForm(method='POST', role='form')
					input#_csrf(name="_csrf", type='hidden', value="#{_csrf}")
					.form-group
						label.control-label Title
						input.form-control(type="text", placeholder="title", name="title", rv-value="post:title")
					.form-group
						label.control-label Tags
						input.form-control(type="text", placeholder="comma-separated list of tags", name="tags", rv-value="post:tags")
					.form-group
						label.control-label Your post
						textarea.form-control(rows='20', name='content', rv-value="post:content")
						span.help-block You can use Markdown or limited html.
					.form-group
						.pull-right
							button.btn.btn-default(type='cancel') Cancel
							button.btn.btn-primary(type="submit") Post
			.col-md-5
				#preview
					h3 { post:title }
					#content(rv-html="post:content | render")
					#tags { post:tags }
